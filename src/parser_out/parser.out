Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement SEMI statement_list
Rule 4     statement -> empty
Rule 5     statement -> expression
Rule 6     statement -> declaration
Rule 7     empty -> <empty>
Rule 8     expression -> NUMBER
Rule 9     expression -> IDENTIFIER
Rule 10    expression -> PLUS expression
Rule 11    expression -> MINUS expression
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression STAR expression
Rule 15    expression -> expression SLASH expression
Rule 16    expression -> expression PERCENT expression
Rule 17    expression -> LPAR expression RPAR
Rule 18    expression -> IDENTIFIER EQUAL expression
Rule 19    expression -> IDENTIFIER PLUS_EQUAL expression
Rule 20    expression -> IDENTIFIER MINUS_EQUAL expression
Rule 21    expression -> IDENTIFIER STAR_EQUAL expression
Rule 22    expression -> IDENTIFIER SLASH_EQUAL expression
Rule 23    expression -> IDENTIFIER PERCENT_EQUAL expression
Rule 24    declaration -> BYTE IDENTIFIER
Rule 25    declaration -> WORD IDENTIFIER
Rule 26    declaration -> DWORD IDENTIFIER
Rule 27    declaration -> QWORD IDENTIFIER
Rule 28    declaration -> FLOAT IDENTIFIER
Rule 29    declaration -> DOUBLE IDENTIFIER

Terminals, with rules where they appear

BYTE                 : 24
DOUBLE               : 29
DWORD                : 26
EQUAL                : 18
FLOAT                : 28
IDENTIFIER           : 9 18 19 20 21 22 23 24 25 26 27 28 29
LPAR                 : 17
MINUS                : 11 13
MINUS_EQUAL          : 20
NUMBER               : 8
PERCENT              : 16
PERCENT_EQUAL        : 23
PLUS                 : 10 12
PLUS_EQUAL           : 19
QWORD                : 27
RPAR                 : 17
SEMI                 : 3
SLASH                : 15
SLASH_EQUAL          : 22
STAR                 : 14
STAR_EQUAL           : 21
WORD                 : 25
error                : 

Nonterminals, with rules where they appear

declaration          : 6
empty                : 4
expression           : 5 10 11 12 12 13 13 14 14 15 15 16 16 17 18 19 20 21 22 23
program              : 0
statement            : 2 3
statement_list       : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement SEMI statement_list
    (4) statement -> . empty
    (5) statement -> . expression
    (6) statement -> . declaration
    (7) empty -> .
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression
    (24) declaration -> . BYTE IDENTIFIER
    (25) declaration -> . WORD IDENTIFIER
    (26) declaration -> . DWORD IDENTIFIER
    (27) declaration -> . QWORD IDENTIFIER
    (28) declaration -> . FLOAT IDENTIFIER
    (29) declaration -> . DOUBLE IDENTIFIER

    SEMI            reduce using rule 7 (empty -> .)
    $end            reduce using rule 7 (empty -> .)
    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11
    BYTE            shift and go to state 12
    WORD            shift and go to state 13
    DWORD           shift and go to state 14
    QWORD           shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    expression                     shift and go to state 5
    declaration                    shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement .
    (3) statement_list -> statement . SEMI statement_list

    $end            reduce using rule 2 (statement_list -> statement .)
    SEMI            shift and go to state 18


state 4

    (4) statement -> empty .

    SEMI            reduce using rule 4 (statement -> empty .)
    $end            reduce using rule 4 (statement -> empty .)


state 5

    (5) statement -> expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    SEMI            reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    STAR            shift and go to state 21
    SLASH           shift and go to state 22
    PERCENT         shift and go to state 23


state 6

    (6) statement -> declaration .

    SEMI            reduce using rule 6 (statement -> declaration .)
    $end            reduce using rule 6 (statement -> declaration .)


state 7

    (8) expression -> NUMBER .

    PLUS            reduce using rule 8 (expression -> NUMBER .)
    MINUS           reduce using rule 8 (expression -> NUMBER .)
    STAR            reduce using rule 8 (expression -> NUMBER .)
    SLASH           reduce using rule 8 (expression -> NUMBER .)
    PERCENT         reduce using rule 8 (expression -> NUMBER .)
    SEMI            reduce using rule 8 (expression -> NUMBER .)
    $end            reduce using rule 8 (expression -> NUMBER .)
    RPAR            reduce using rule 8 (expression -> NUMBER .)


state 8

    (9) expression -> IDENTIFIER .
    (18) expression -> IDENTIFIER . EQUAL expression
    (19) expression -> IDENTIFIER . PLUS_EQUAL expression
    (20) expression -> IDENTIFIER . MINUS_EQUAL expression
    (21) expression -> IDENTIFIER . STAR_EQUAL expression
    (22) expression -> IDENTIFIER . SLASH_EQUAL expression
    (23) expression -> IDENTIFIER . PERCENT_EQUAL expression

    PLUS            reduce using rule 9 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 9 (expression -> IDENTIFIER .)
    STAR            reduce using rule 9 (expression -> IDENTIFIER .)
    SLASH           reduce using rule 9 (expression -> IDENTIFIER .)
    PERCENT         reduce using rule 9 (expression -> IDENTIFIER .)
    SEMI            reduce using rule 9 (expression -> IDENTIFIER .)
    $end            reduce using rule 9 (expression -> IDENTIFIER .)
    RPAR            reduce using rule 9 (expression -> IDENTIFIER .)
    EQUAL           shift and go to state 24
    PLUS_EQUAL      shift and go to state 25
    MINUS_EQUAL     shift and go to state 26
    STAR_EQUAL      shift and go to state 27
    SLASH_EQUAL     shift and go to state 28
    PERCENT_EQUAL   shift and go to state 29


state 9

    (10) expression -> PLUS . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 30

state 10

    (11) expression -> MINUS . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 31

state 11

    (17) expression -> LPAR . expression RPAR
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 32

state 12

    (24) declaration -> BYTE . IDENTIFIER

    IDENTIFIER      shift and go to state 33


state 13

    (25) declaration -> WORD . IDENTIFIER

    IDENTIFIER      shift and go to state 34


state 14

    (26) declaration -> DWORD . IDENTIFIER

    IDENTIFIER      shift and go to state 35


state 15

    (27) declaration -> QWORD . IDENTIFIER

    IDENTIFIER      shift and go to state 36


state 16

    (28) declaration -> FLOAT . IDENTIFIER

    IDENTIFIER      shift and go to state 37


state 17

    (29) declaration -> DOUBLE . IDENTIFIER

    IDENTIFIER      shift and go to state 38


state 18

    (3) statement_list -> statement SEMI . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement SEMI statement_list
    (4) statement -> . empty
    (5) statement -> . expression
    (6) statement -> . declaration
    (7) empty -> .
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression
    (24) declaration -> . BYTE IDENTIFIER
    (25) declaration -> . WORD IDENTIFIER
    (26) declaration -> . DWORD IDENTIFIER
    (27) declaration -> . QWORD IDENTIFIER
    (28) declaration -> . FLOAT IDENTIFIER
    (29) declaration -> . DOUBLE IDENTIFIER

    SEMI            reduce using rule 7 (empty -> .)
    $end            reduce using rule 7 (empty -> .)
    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11
    BYTE            shift and go to state 12
    WORD            shift and go to state 13
    DWORD           shift and go to state 14
    QWORD           shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17

    statement                      shift and go to state 3
    statement_list                 shift and go to state 39
    empty                          shift and go to state 4
    expression                     shift and go to state 5
    declaration                    shift and go to state 6

state 19

    (12) expression -> expression PLUS . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 40

state 20

    (13) expression -> expression MINUS . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 41

state 21

    (14) expression -> expression STAR . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 42

state 22

    (15) expression -> expression SLASH . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 43

state 23

    (16) expression -> expression PERCENT . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 44

state 24

    (18) expression -> IDENTIFIER EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 45

state 25

    (19) expression -> IDENTIFIER PLUS_EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 46

state 26

    (20) expression -> IDENTIFIER MINUS_EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 47

state 27

    (21) expression -> IDENTIFIER STAR_EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 48

state 28

    (22) expression -> IDENTIFIER SLASH_EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 49

state 29

    (23) expression -> IDENTIFIER PERCENT_EQUAL . expression
    (8) expression -> . NUMBER
    (9) expression -> . IDENTIFIER
    (10) expression -> . PLUS expression
    (11) expression -> . MINUS expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression STAR expression
    (15) expression -> . expression SLASH expression
    (16) expression -> . expression PERCENT expression
    (17) expression -> . LPAR expression RPAR
    (18) expression -> . IDENTIFIER EQUAL expression
    (19) expression -> . IDENTIFIER PLUS_EQUAL expression
    (20) expression -> . IDENTIFIER MINUS_EQUAL expression
    (21) expression -> . IDENTIFIER STAR_EQUAL expression
    (22) expression -> . IDENTIFIER SLASH_EQUAL expression
    (23) expression -> . IDENTIFIER PERCENT_EQUAL expression

    NUMBER          shift and go to state 7
    IDENTIFIER      shift and go to state 8
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    LPAR            shift and go to state 11

    expression                     shift and go to state 50

state 30

    (10) expression -> PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 10 (expression -> PLUS expression .)
    MINUS           reduce using rule 10 (expression -> PLUS expression .)
    STAR            reduce using rule 10 (expression -> PLUS expression .)
    SLASH           reduce using rule 10 (expression -> PLUS expression .)
    PERCENT         reduce using rule 10 (expression -> PLUS expression .)
    SEMI            reduce using rule 10 (expression -> PLUS expression .)
    $end            reduce using rule 10 (expression -> PLUS expression .)
    RPAR            reduce using rule 10 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 31

    (11) expression -> MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 11 (expression -> MINUS expression .)
    MINUS           reduce using rule 11 (expression -> MINUS expression .)
    STAR            reduce using rule 11 (expression -> MINUS expression .)
    SLASH           reduce using rule 11 (expression -> MINUS expression .)
    PERCENT         reduce using rule 11 (expression -> MINUS expression .)
    SEMI            reduce using rule 11 (expression -> MINUS expression .)
    $end            reduce using rule 11 (expression -> MINUS expression .)
    RPAR            reduce using rule 11 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 32

    (17) expression -> LPAR expression . RPAR
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    RPAR            shift and go to state 51
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    STAR            shift and go to state 21
    SLASH           shift and go to state 22
    PERCENT         shift and go to state 23


state 33

    (24) declaration -> BYTE IDENTIFIER .

    SEMI            reduce using rule 24 (declaration -> BYTE IDENTIFIER .)
    $end            reduce using rule 24 (declaration -> BYTE IDENTIFIER .)


state 34

    (25) declaration -> WORD IDENTIFIER .

    SEMI            reduce using rule 25 (declaration -> WORD IDENTIFIER .)
    $end            reduce using rule 25 (declaration -> WORD IDENTIFIER .)


state 35

    (26) declaration -> DWORD IDENTIFIER .

    SEMI            reduce using rule 26 (declaration -> DWORD IDENTIFIER .)
    $end            reduce using rule 26 (declaration -> DWORD IDENTIFIER .)


state 36

    (27) declaration -> QWORD IDENTIFIER .

    SEMI            reduce using rule 27 (declaration -> QWORD IDENTIFIER .)
    $end            reduce using rule 27 (declaration -> QWORD IDENTIFIER .)


state 37

    (28) declaration -> FLOAT IDENTIFIER .

    SEMI            reduce using rule 28 (declaration -> FLOAT IDENTIFIER .)
    $end            reduce using rule 28 (declaration -> FLOAT IDENTIFIER .)


state 38

    (29) declaration -> DOUBLE IDENTIFIER .

    SEMI            reduce using rule 29 (declaration -> DOUBLE IDENTIFIER .)
    $end            reduce using rule 29 (declaration -> DOUBLE IDENTIFIER .)


state 39

    (3) statement_list -> statement SEMI statement_list .

    $end            reduce using rule 3 (statement_list -> statement SEMI statement_list .)


state 40

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 12 (expression -> expression PLUS expression .)
    $end            reduce using rule 12 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 12 (expression -> expression PLUS expression .)
    STAR            shift and go to state 21
    SLASH           shift and go to state 22
    PERCENT         shift and go to state 23

  ! STAR            [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! SLASH           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PERCENT         [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]


state 41

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 13 (expression -> expression MINUS expression .)
    $end            reduce using rule 13 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 13 (expression -> expression MINUS expression .)
    STAR            shift and go to state 21
    SLASH           shift and go to state 22
    PERCENT         shift and go to state 23

  ! STAR            [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! SLASH           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PERCENT         [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]


state 42

    (14) expression -> expression STAR expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 14 (expression -> expression STAR expression .)
    MINUS           reduce using rule 14 (expression -> expression STAR expression .)
    STAR            reduce using rule 14 (expression -> expression STAR expression .)
    SLASH           reduce using rule 14 (expression -> expression STAR expression .)
    PERCENT         reduce using rule 14 (expression -> expression STAR expression .)
    SEMI            reduce using rule 14 (expression -> expression STAR expression .)
    $end            reduce using rule 14 (expression -> expression STAR expression .)
    RPAR            reduce using rule 14 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 43

    (15) expression -> expression SLASH expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 15 (expression -> expression SLASH expression .)
    MINUS           reduce using rule 15 (expression -> expression SLASH expression .)
    STAR            reduce using rule 15 (expression -> expression SLASH expression .)
    SLASH           reduce using rule 15 (expression -> expression SLASH expression .)
    PERCENT         reduce using rule 15 (expression -> expression SLASH expression .)
    SEMI            reduce using rule 15 (expression -> expression SLASH expression .)
    $end            reduce using rule 15 (expression -> expression SLASH expression .)
    RPAR            reduce using rule 15 (expression -> expression SLASH expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 44

    (16) expression -> expression PERCENT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 16 (expression -> expression PERCENT expression .)
    MINUS           reduce using rule 16 (expression -> expression PERCENT expression .)
    STAR            reduce using rule 16 (expression -> expression PERCENT expression .)
    SLASH           reduce using rule 16 (expression -> expression PERCENT expression .)
    PERCENT         reduce using rule 16 (expression -> expression PERCENT expression .)
    SEMI            reduce using rule 16 (expression -> expression PERCENT expression .)
    $end            reduce using rule 16 (expression -> expression PERCENT expression .)
    RPAR            reduce using rule 16 (expression -> expression PERCENT expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 45

    (18) expression -> IDENTIFIER EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    MINUS           reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    STAR            reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    SLASH           reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    PERCENT         reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    SEMI            reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    $end            reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)
    RPAR            reduce using rule 18 (expression -> IDENTIFIER EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 46

    (19) expression -> IDENTIFIER PLUS_EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    MINUS           reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    STAR            reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    SLASH           reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    PERCENT         reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    SEMI            reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    $end            reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)
    RPAR            reduce using rule 19 (expression -> IDENTIFIER PLUS_EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 47

    (20) expression -> IDENTIFIER MINUS_EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    MINUS           reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    STAR            reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    SLASH           reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    PERCENT         reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    SEMI            reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    $end            reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)
    RPAR            reduce using rule 20 (expression -> IDENTIFIER MINUS_EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 48

    (21) expression -> IDENTIFIER STAR_EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    MINUS           reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    STAR            reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    SLASH           reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    PERCENT         reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    SEMI            reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    $end            reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)
    RPAR            reduce using rule 21 (expression -> IDENTIFIER STAR_EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 49

    (22) expression -> IDENTIFIER SLASH_EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    MINUS           reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    STAR            reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    SLASH           reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    PERCENT         reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    SEMI            reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    $end            reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)
    RPAR            reduce using rule 22 (expression -> IDENTIFIER SLASH_EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 50

    (23) expression -> IDENTIFIER PERCENT_EQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . STAR expression
    (15) expression -> expression . SLASH expression
    (16) expression -> expression . PERCENT expression

    PLUS            reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    MINUS           reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    STAR            reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    SLASH           reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    PERCENT         reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    SEMI            reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    $end            reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)
    RPAR            reduce using rule 23 (expression -> IDENTIFIER PERCENT_EQUAL expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! STAR            [ shift and go to state 21 ]
  ! SLASH           [ shift and go to state 22 ]
  ! PERCENT         [ shift and go to state 23 ]


state 51

    (17) expression -> LPAR expression RPAR .

    PLUS            reduce using rule 17 (expression -> LPAR expression RPAR .)
    MINUS           reduce using rule 17 (expression -> LPAR expression RPAR .)
    STAR            reduce using rule 17 (expression -> LPAR expression RPAR .)
    SLASH           reduce using rule 17 (expression -> LPAR expression RPAR .)
    PERCENT         reduce using rule 17 (expression -> LPAR expression RPAR .)
    SEMI            reduce using rule 17 (expression -> LPAR expression RPAR .)
    $end            reduce using rule 17 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 17 (expression -> LPAR expression RPAR .)

